---
title: "HW4"
author: "Nick Kim"
format:
  html:
    embed-resources: true
---

##Problem 1 

```{r}
library(tidyverse)
library(nycflights13)
```

#part a:

Median and Mean departure delay per airport
```{r}
flights %>% group_by(origin) %>% 
  summarise(count=n(), med_dep_delay = median(dep_delay, na.rm=TRUE),
            mean_dep_delay = mean(dep_delay, na.rm=TRUE), .groups = 'drop') %>% filter(count > 10) %>%   arrange(,desc(mean_dep_delay))
```

```{r}
flights %>% group_by(dest) %>% 
  summarise(count=n(), med_arr_delay = median(arr_delay, na.rm=TRUE),
            mean_arr_delay = mean(arr_delay, na.rm=TRUE), .groups = 'drop') %>% filter(count > 10) %>%   arrange(,desc(mean_arr_delay))
```

#part b:

How many flights did the aircraft model with the fastest average speed take?
```{r}
flights
planes
```
```{r}
jflights<-inner_join(flights, planes, by="tailnum")
jflights %>% group_by(model) %>% 
  summarise(count = n(),.groups = 'drop',speed = mean(distance/air_time, na.rm = TRUE))
```

##Problem 2
```{r}
nnmaps<-read.csv("/Users/nicholaskim/Documents/STAT 506/HW4/chicago-nmmaps.csv")
```

```{r}
nnmaps %>% filter(month=="Apr",year==1999) %>% summarise(avg_temp = mean(temp))
```

Writing function that allows user to request average temperature for a given month
```{r}
get_temp <- function(month,year,data,celsius=FALSE,average_fn=mean){
  if(is.numeric(month)!=TRUE | is.character(month)!=TRUE){
    return("Month should be value 1-12 or character")
  }
  elif(is.numeric(year)!=TRUE){
    return("Year should be a numeric value")
  }
  else{temp<- data %>% filter(month==month,year==year) %>% 
    summarise(avg_temp=average_fn(temp))
  return(temp)
  }
}
```

Testing cases:
```{r}
get_temp("Apr", 1999, data = nnmaps)
#get_temp("Apr", 1999, data = nnmaps, celsius = TRUE)
#get_temp(10, 1998, data = nnmaps, average_fn = median)
#get_temp(13, 1998, data = nnmaps)
#get_temp(2, 2005, data = nnmaps)
#get_temp("November", 1999, data =nnmaps, celsius = TRUE,
        # average_fn = function(x) {
         #  x %>% sort -> x
        #   x[2:(length(x) - 1)] %>% mean %>% return
       #  })
```
